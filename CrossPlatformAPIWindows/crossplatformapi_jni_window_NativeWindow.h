/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class crossplatformapi_jni_window_NativeWindow */

#ifndef _Included_crossplatformapi_jni_window_NativeWindow
#define _Included_crossplatformapi_jni_window_NativeWindow
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getWindowInForeground
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getWindowInForeground
  (JNIEnv *, jclass);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getWindowByTitle
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getWindowByTitle
  (JNIEnv *, jclass, jstring);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getVisibleWindows
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_crossplatformapi_jni_window_NativeWindow_getVisibleWindows
  (JNIEnv *, jclass);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getTitle
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_crossplatformapi_jni_window_NativeWindow_getTitle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getXPosition
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getXPosition
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getYPosition
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getYPosition
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getWidth
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getWidth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    getHeight
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_crossplatformapi_jni_window_NativeWindow_getHeight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    setMaximize
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_setMaximize
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    setTopMost
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_setTopMost
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    setSize
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_setSize
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    setPosition
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_setPosition
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    toFront
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_toFront
  (JNIEnv *, jclass, jlong);

/*
 * Class:     crossplatformapi_jni_window_NativeWindow
 * Method:    toBack
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_crossplatformapi_jni_window_NativeWindow_toBack
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
